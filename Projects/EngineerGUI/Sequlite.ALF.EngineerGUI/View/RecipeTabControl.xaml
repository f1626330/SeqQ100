<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Sequlite.ALF.EngineerGUI.View"
             xmlns:vm="clr-namespace:Sequlite.ALF.EngineerGUI.ViewModel"
             xmlns:wpfFramework="clr-namespace:Sequlite.WPF.Framework;assembly=Sequlite.WPF.Framework"
             xmlns:ToggleSwitch="clr-namespace:ToggleSwitch;assembly=ToggleSwitch" x:Class="Sequlite.ALF.EngineerGUI.View.RecipeTabControl"
             mc:Ignorable="d" 
    
             d:DesignHeight="400" d:DesignWidth="800">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="1*"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Button Content="Load Recipe..." Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5" Command="{Binding LoadRecipeCmd}"
                    IsEnabled="{Binding Path= IsBusy, Converter={StaticResource booleanReverseConverter}}"/>
            
            
            <StackPanel Orientation="Horizontal" Grid.Column="1">
                <TextBlock Text="BaseCall:" Margin="5"/>
                <ToggleSwitch:HorizontalToggleSwitch Width="80" Margin="5"
                                             IsChecked="{Binding Path=isBC, Mode=TwoWay}"/>
                <TextBlock Text="Template:" Margin="5"/>
                <ComboBox Width="100" Grid.Row="0" Grid.Column="1" Margin="5"
                      ItemsSource="{Binding Path=TemplateOptions}" SelectedItem="{Binding Path=SelectedTemplate}"/>
                <TextBlock Text="BackUp:" Margin="5"/>
                <ToggleSwitch:HorizontalToggleSwitch Width="80" Margin="5"
                                             IsChecked="{Binding Path=IsBackUp, Mode=TwoWay}"/>
                <TextBlock Text="OneRef:" Margin="5"/>
                <ToggleSwitch:HorizontalToggleSwitch Width="80" Margin="5"
                                             IsChecked="{Binding Path=IsOneRef, Mode=TwoWay}"/>
                <TextBlock Text="Recalculate Offset:" Margin="5"/>
                <ToggleSwitch:HorizontalToggleSwitch Width="80" Margin="5"
                                             IsChecked="{Binding Path=IsRecalculateOffset, Mode=TwoWay}"/>
                <TextBlock Text="Index:" Margin="5"/>
                <ToggleSwitch:HorizontalToggleSwitch Width="80" Margin="5"
                                             IsChecked="{Binding Path=IsIndex, Mode=TwoWay}"/>
                <TextBlock Text="OLA:" Margin="5"/>
                <ToggleSwitch:HorizontalToggleSwitch Width="80" Margin="5"
                                             IsChecked="{Binding Path=isEnableOLA, Mode=TwoWay}"/>
                <TextBlock Text="OLA status:"   Margin="5"/>
                <TextBlock Text="{Binding Path=OLAStatusInfo}" Margin="5"/>
            </StackPanel>
        </Grid>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" Orientation="Horizontal">
                <TextBlock Text="Exposure:" Margin="5"/>
                <TextBox Text="{Binding ExposureFactor}" Width="40" Margin="5"/>
                <Button Content="Set"  Width="30" Command="{Binding Path=SetFactorCmd}" CommandParameter="Exposure"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Grid.Column="1">
                <TextBlock Text="RedLED:"  Margin="5"/>
                <TextBox Text="{Binding RedLEDFactor}"  Margin="5" Width="40"/>
                <Button Content="Set"   Width="30" Command="{Binding Path=SetFactorCmd}" CommandParameter="RedLED"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Grid.Column="2" >
                <TextBlock Text="GreedLED:"  Margin="5"/>
                <TextBox Text="{Binding GreenLEDFactor}"  Margin="5" Width="40"/>
                <Button Content="Set"  Width="30" Command="{Binding Path=SetFactorCmd}" CommandParameter="GreeLED"/>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Grid.Column="3" >
                <TextBlock Text="B_Offset:" Margin="5"/>
                <TextBox Text="{Binding B_Offset}" Margin="5" Width="40"/>
                <Button Content="Set"  Width="30" Command="{Binding Path=SetFactorCmd}" CommandParameter="B_Offset"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Grid.Column="4" >
                <TextBlock Text="T_Offset:" Margin="5"/>
                <TextBox Text="{Binding T_Offset}" Margin="5" Width="40"/>
                <Button Content="Set"  Width="30" Command="{Binding Path=SetFactorCmd}" CommandParameter="T_Offset"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal" Grid.Column="5">
                <TextBlock Text="Start Inc:" Margin="5"/>
                <TextBox Text="{Binding StartInc}" Margin="5" Width="40"/>
                <Button Content="Set"  Width="30" Command="{Binding Path=SetFactorCmd}" CommandParameter="StartInc"/>
            </StackPanel>

        </Grid>
        <Grid Grid.Row="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="User Email:" Grid.Column="1" Margin="5"/>
            <TextBox Text="{Binding SubscribedEmail}" Grid.Column="2" Margin="5" Width="150"/>
            <Button Content="Subscribe" Grid.Column="3"  Width="100" Margin="5"
                Command="{Binding Path=SetFactorCmd}" CommandParameter="SubscribedEmail"/>
            <TextBlock Text="Subscribed Email:" Grid.Column="4" Margin="5"/>
            <TextBlock Text="{Binding SubscribedEmail}" Grid.Column="5" Margin="5"/>
            <CheckBox Grid.Column="6" Content="Simulation Mode" IsChecked="{Binding IsSimulationMode,Mode=TwoWay}" Margin="5,5,144,5"></CheckBox>
            <!--<CheckBox Content="Post Processing" Grid.Column="6" IsChecked="{Binding isEnablePP,Mode=TwoWay}" HorizontalAlignment="Left" Margin="178,5,0,0" VerticalAlignment="Top"/> -->
            <Button Content="Run Recipe" Width="80" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5"
                    Command="{Binding RunRecipeCmd}" CommandParameter="Start"/>
            <Button Content="Stop" Width="80" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="5"
                    Visibility="{Binding DataContext.IsBusy, Converter={StaticResource boolToVisibilityVisibleConverter},RelativeSource={RelativeSource  FindAncestor, AncestorType={x:Type Control}}}"
                    Command="{Binding RunRecipeCmd}" CommandParameter="Stop"
                    IsEnabled="{Binding DataContext.AbortingRecipeRun, Converter={StaticResource booleanReverseConverter},RelativeSource={RelativeSource  FindAncestor, AncestorType={x:Type Control}}}"
                    />
        </Grid>
        <Grid Grid.Row="3">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="399*"/>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="127*"/>
                <ColumnDefinition Width="30*"/>
                <ColumnDefinition Width="241*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TextBox Text="{Binding RecipePath}" Grid.Column="0" Grid.Row="0" Background="WhiteSmoke" 
                        Padding="5" Margin="5,5,5,0" TextWrapping="Wrap"/>
                <Border Margin="5,0,5,5" Grid.Column="0" Grid.Row="1" BorderThickness="1" BorderBrush="Gray">
                    <ScrollViewer  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                              HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" >
                        <TreeView HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                              ItemsSource="{Binding Steps}" SelectedItemChanged="TreeView_SelectedItemChanged"
                              IsEnabled="False" Margin="1">
                            <TreeView.ItemContainerStyle>
                                <Style TargetType="{x:Type TreeViewItem}">
                                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="FontWeight" Value="Bold"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </TreeView.ItemContainerStyle>
                            <TreeView.ItemTemplate>
                                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                                    <TextBlock Text="{Binding Content.Step.DisplayName}" Margin="2" />
                                </HierarchicalDataTemplate>
                            </TreeView.ItemTemplate>
                        </TreeView>
                    </ScrollViewer>
                </Border>
            </Grid>
            <GridSplitter Grid.Column="1" Width="3" HorizontalAlignment="Stretch"  Background="GhostWhite" 
              ShowsPreview="True"/>
            <!--<ScrollViewer Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                          HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                <TextBox Text="{Binding Path=RunningLog, Mode=OneWay}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="5" IsReadOnly="True"/>
            </ScrollViewer>-->
            <wpfFramework:LogViewer Grid.Column="2" DataContext="{Binding Path=LogViewerVM}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="5" Background="FloralWhite" Grid.ColumnSpan="3" />
        </Grid>
    </Grid>
</UserControl>
