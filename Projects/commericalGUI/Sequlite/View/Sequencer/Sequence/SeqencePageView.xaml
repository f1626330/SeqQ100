<UserControl x:Class="Sequlite.UI.View.SeqencePageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
              xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:local="clr-namespace:Sequlite.UI.View"
              xmlns:d3_old="http://research.microsoft.com/DynamicDataDisplay/1.0"
             xmlns:d3="clr-namespace:InteractiveDataDisplay.WPF;assembly=InteractiveDataDisplay.WPF"
             xmlns:wpfFramework="clr-namespace:Sequlite.WPF.Framework;assembly=Sequlite.WPF.Framework"
             xmlns:app="clr-namespace:Sequlite.ALF.App;assembly=Sequlite.ALF.App"
             mc:Ignorable="d" 
             x:Name="_page"
             d:DesignHeight="600" d:DesignWidth="800" >
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Resources/PageViewDictionary.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <Style TargetType="{x:Type Label}">
                <Setter Property="Control.Foreground" Value="WhiteSmoke"/>
                <Setter Property="FontSize" Value="18" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
            </Style>
            <Style TargetType="{x:Type TextBlock}" x:Key="textblockStyle">
                <Setter Property="FontSize" Value="16"  />
                
                <Setter Property="Foreground" Value="Yellow" />
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>
            
           
        </ResourceDictionary>
        
    </UserControl.Resources>
    <Grid x:Name="gd">
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
            
        </Grid.RowDefinitions>
        <!-- top bar -->
        <Border Grid.Row="0" x:Name="bd" Style="{StaticResource PageBorderStyle}" Background="Black">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="405"/>
                    <ColumnDefinition Width="2" />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <Grid  Grid.Column="0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="67"/>
                        <ColumnDefinition Width="72" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="38" />
                        <ColumnDefinition  />

                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0" Content="Time:" />
                    <TextBlock  Grid.Column="1"  Style="{StaticResource textblockStyle}" HorizontalAlignment="Left"
                           Text="{Binding SequenceStatus.TimeElapsed, StringFormat={}{0:d\\:h\\:m\\:s}}" />

                    <StackPanel Grid.Column="2" Orientation="Horizontal">
                        <Label Content="{Binding SequenceStatus.ImagingSequenceRead,  Converter={StaticResource enumToDisplayNameConverter} }" Width="62"/>
                        <Label  Content="Cycle:" Width="55"/>
                    </StackPanel>
                    <TextBlock  Grid.Column="3" Width="38"  Style="{StaticResource textblockStyle}" Text="{Binding SequenceStatus.Cyle}" HorizontalAlignment="Left" />
                    <TextBlock Grid.Column="4"   TextWrapping="Wrap" Padding="5,0,5,0"
                               Text="{Binding SequenceStatus.Step}" HorizontalAlignment="Stretch"  Margin="5,0,5,0">
                        <TextBlock.Style  >
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource textblockStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SequenceStatus.StepMessageType}" Value="{x:Static app:ProgressTypeEnum.InProgress}">
                                        <Setter Property="Background" Value="Transparent"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding SequenceStatus.StepMessageType}" Value="{x:Static app:ProgressTypeEnum.Completed}">
                                        <Setter Property="Background" Value="Green"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding SequenceStatus.StepMessageType}" Value="{x:Static app:ProgressTypeEnum.Failed}">
                                        <Setter Property="Background" Value="Red"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding SequenceStatus.StepMessageType}" Value="{x:Static app:ProgressTypeEnum.Aborted}">
                                        <Setter Property="Background" Value="Red"/>
                                    </DataTrigger>

                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                </Grid>
                <GridSplitter Grid.Column="1" Width="2" HorizontalAlignment="Stretch" Margin="0,0.5,0,0.5" Background="Gray"/>
                <Grid  Grid.Column="2"  x:Name="gd2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="220" />
                        <ColumnDefinition Width="2" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Border  Grid.Column="0"  x:Name="bd2" Opacity="1" Background="Transparent"  BorderThickness="0">
                        <Grid>
                            <ProgressBar  IsIndeterminate="{Binding SequenceStatus.IsOLARunning}"
                             Margin="1" Style="{StaticResource progressbarStyle}" Background="Black">

                            </ProgressBar>
                            <TextBlock   FontSize="11" Style="{StaticResource textblockStyle}"
                               Text="{Binding SequenceStatus.OLAMessage}"
                               TextWrapping="Wrap"   Margin="5,0,5,0"/>
                        </Grid>
                      
                    </Border>
                    <GridSplitter Grid.Column="1" Width="2" HorizontalAlignment="Stretch" Margin="0,0.5,0,0.5" Background="Gray"/>
                    <Grid x:Name="st"  Grid.Column="2">
                        <Grid.ColumnDefinitions>

                            <ColumnDefinition Width="65" />
                            <ColumnDefinition />
                            <ColumnDefinition MaxWidth="85" MinWidth="1"/>
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0" Content="Data:" HorizontalAlignment="Left" Margin="1,0,0,0"/>
                        <TextBlock  Grid.Column="1" Style="{StaticResource textblockStyle}"  FontSize="10"
                               Text="{Binding SequenceStatus.ImageSaved}"
                               TextWrapping="Wrap"   Margin="0,0,5,0" />
                        <Border Grid.Column="2" BorderThickness="1"  Margin="-1" Background="Transparent">
                            <Grid>
                                <ProgressBar  Grid.Column="0" IsIndeterminate="{Binding SequenceStatus.IsDataBackupRunning}"
                                  Style="{StaticResource progressbarStyle}" Background="Black">
                                </ProgressBar>
                                <Label  Content="Backup Data" FontSize="11" Foreground="Yellow" 
                                           VerticalAlignment="Center" HorizontalAlignment="Center" 
                                        Visibility="{Binding SequenceStatus.IsDataBackupRunning, Converter={StaticResource boolToVisibilityVisibleConverter}, Mode=OneWay}"/>
                            </Grid>
                        </Border>
                    </Grid>
                </Grid>
            </Grid>
        </Border>
        <!-- graphs and table -->
        <Border Grid.Row="1" Style="{StaticResource PageBorderStyle}">
            <!--<Grid >
                <Grid.RowDefinitions>
                    <RowDefinition />
                    <RowDefinition  />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                --><!-- heat map and combo boxes--><!--
                <Border Grid.Row="0" Grid.Column="0" Style="{StaticResource PageBorderStyle}" Background="WhiteSmoke" >
                    <local:DataByTileControl DataContext="{Binding DataByTileVM}" />
                </Border>
                --><!-- line graph and combo boxes --><!--
                <Border Grid.Row="0" Grid.Column="1" Style="{StaticResource PageBorderStyle}" Background="WhiteSmoke" >
                    <local:DataByCycleControl DataContext="{Binding DataByCycleVM}" />
                </Border>
                --><!-- table --><!--
                <Border Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" Style="{StaticResource PageBorderStyle}">
                    <local:DataInTableControl DataContext="{Binding DataInTableVM}"  Margin="1"/>
                </Border>

            </Grid>-->
            <local:MultipleDataGraphView  DataContext="{Binding MultipleDataGraphVM}" 
                  Visibility="{Binding MultipleDataGraphVM, Converter={StaticResource nullVisibilityConverter}}"/>
        </Border>
    </Grid>
</UserControl>
