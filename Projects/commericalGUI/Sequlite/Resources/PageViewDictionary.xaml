<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                     xmlns:app="clr-namespace:Sequlite.ALF.App;assembly=Sequlite.ALF.App"
                     >
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Resources/StyleDictionary.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
   
    <Style x:Key="timerTriggeredFlash" TargetType="Ellipse">
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Control},
         Path=DataContext.IsStarted}" Value="True">
               <DataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation 
                     Storyboard.TargetProperty="(Fill).(SolidColorBrush.Color)" 
                     From="WhiteSmoke" To="Green" RepeatBehavior="Forever" 
                                 Duration="0:0:0.5" 
                     AutoReverse="True" />
                        </Storyboard>
                    </BeginStoryboard>
                </DataTrigger.EnterActions>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="CheckBox" x:Key="BigCheckboxMarkStyle" BasedOn="{StaticResource basePageControlStyle}" >
      
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <!--<Setter Property="FontFamily" Value="{DynamicResource MetroFontRegular}"/>
        <Setter Property="FocusVisualStyle" Value="{StaticResource CheckBoxFocusVisual}"/>-->
       
        <!--<Setter Property="Foreground" Value="#999999"/>
        <Setter Property="Background" Value="#3f3f3f"/>-->
        
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border"  Height="{TemplateBinding ActualHeight}"  Width="{TemplateBinding ActualHeight}"
                                    Background="White" BorderBrush="Gray" BorderThickness="1" >
                                <Image x:Name="CheckMark" Source="/Resources/Images/checkmark.png" Stretch="UniformToFill" Margin="1" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="8,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left" RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="lightskyblue" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#c1c1c1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="CheckBox" x:Key="StatusCheckboxStyle" BasedOn="{StaticResource basePageControlStyle}">
        
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Content" Value=""></Setter>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}" x:Name="tmp">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition ></RowDefinition>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition></ColumnDefinition>
                            <ColumnDefinition ></ColumnDefinition>
                        </Grid.ColumnDefinitions>
                        <Border Background="Transparent" BorderBrush="LightGray" BorderThickness="1.5" CornerRadius="1" 
                                 Height="{TemplateBinding ActualHeight}"  Width="{TemplateBinding ActualHeight}" VerticalAlignment="Center"  >
                            <Grid>
                                <Ellipse x:Name="outerEllipse" Grid.Column="0" Fill="Blue" Margin="2" Style="{StaticResource timerTriggeredFlash}">
                                </Ellipse>
                            </Grid>
                           
                        </Border>
                        <ContentPresenter Grid.Column="1" x:Name="content" Margin="5,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="outerEllipse" Property="Fill" Value="Green">
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="outerEllipse" Property="Fill" Value="LightGray" />
                            
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="outerEllipse" Property="Fill" Value="Red">
                            </Setter>
                        </Trigger>
                        
                    </ControlTemplate.Triggers>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>
       
    </Style>

    

    <Style x:Key="StatusListView" TargetType="{x:Type ListView}"  BasedOn="{StaticResource basePageControlStyle}">
        <Setter Property="BorderThickness" Value="0.4" />
        <Setter Property="Margin" Value="5,10,5,5" />
        <Setter Property="Background" Value="WhiteSmoke" />
        
    </Style>

    <DataTemplate x:Key="StatusListViewItemTemplate">
        <StackPanel  Orientation="Horizontal" >
            <CheckBox  Margin="5" VerticalAlignment="Center" IsChecked="{Binding IsSuccess, Mode=OneWay}"
                       IsThreeState="True"  Style="{StaticResource StatusCheckboxStyle}">
                
            </CheckBox>
            <TextBlock Text="{Binding Name}" Margin="5" VerticalAlignment="Center"  />
        </StackPanel>
    </DataTemplate>

    <Style x:Key='OLAStatus' TargetType='ContentControl'>
        <Setter Property='Template'>
            <Setter.Value>
                <ControlTemplate TargetType="ContentControl">
                    <TextBlock Text="{Binding  SequenceStatus.OLAMessage}"  Margin="1" Padding="4" Foreground="Yellow" >
                        <TextBlock.Style  >
                            <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource bigTextBlockStyle}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding SequenceStatus.OLAMessageType}" Value="{x:Static app:ProgressTypeEnum.InProgress}">
                                        <Setter Property="Background" Value="Transparent"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding SequenceStatus.OLAMessageType}" Value="{x:Static app:ProgressTypeEnum.InProgressWithWarning}">
                                        <Setter Property="Background" Value="OrangeRed"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding SequenceStatus.OLAMessageType}" Value="{x:Static app:ProgressTypeEnum.Completed}">
                                        <Setter Property="Background" Value="SeaGreen"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding SequenceStatus.OLAMessageType}" Value="{x:Static app:ProgressTypeEnum.Failed}">
                                        <Setter Property="Background" Value="Red"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding SequenceStatus.OLAMessageType}" Value="{x:Static app:ProgressTypeEnum.Aborted}">
                                        <Setter Property="Background" Value="Red"/>
                                    </DataTrigger>

                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DGCHeaderStyle" TargetType="DataGridColumnHeader">

        <Setter Property ="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="30"/>
        <!--<Setter Property="Background" Value="AliceBlue" />-->
        <Setter Property="Opacity" Value="0.6" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="Calibri" />
        <Setter Property="FontWeight" Value="SemiBold" />
        <Setter Property="BorderBrush" Value="Gray"/>
        <Setter Property="BorderThickness" Value="0,0,0,1.5"/>
    </Style>
</ResourceDictionary>