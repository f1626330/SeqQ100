<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Sequlite.WPF.Framework"
                    >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Sequlite.WPF.Framework;component/Styles/ColorDictionary.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <ControlTemplate x:Key="SimpleExpanderButtonTemp" TargetType="{x:Type ToggleButton}">
        <Border x:Name="ExpanderButtonBorder"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}"
                    >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Rectangle Fill="Transparent"
                               Grid.ColumnSpan="2"/>
                <!-- +/- toggle button -->
                <Ellipse Name="Circle"
                         Grid.Column="0"
                         Stroke="DarkGray"
                         Width="40"
                         Height="40"
                         HorizontalAlignment="Center"
                         VerticalAlignment="Center"
                         />
                <Path x:Name="Sign"
                      Grid.Column="0"
                      Data="M 0,10 H 20 M 10,0 V 20 Z"
                      Stroke="#FF666666"
                      Width="20"
                      Height="20"
                      StrokeThickness="2"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"
                      RenderTransformOrigin="0.5,0.5"
                         
                      />
                <ContentPresenter x:Name="HeaderContent"
                                  Grid.Column="1"
                                  Margin="4,0,0,0"
                                  ContentSource="Content"/>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <!--Change the sign to minus when toggled-->
            <Trigger Property="IsChecked"
                         Value="True">
                <Setter Property="Data" TargetName="Sign" Value="M 0,10 H 20 Z"/>
            </Trigger>

            <!-- MouseOver, Pressed behaviours-->
            <Trigger Property="IsMouseOver"
                                 Value="true">
                <Setter Property="Stroke"
                                    Value="#FF3C7FB1"
                                    TargetName="Circle"/>
                <Setter Property="Stroke"
                                    Value="deepskyblue"
                                    TargetName="Sign"/>
            </Trigger>
            <Trigger Property="IsPressed"
                                 Value="true">
                <Setter Property="Stroke"
                                    Value="#FF526C7B"
                                    TargetName="Circle"/>
                <Setter Property="StrokeThickness"
                                    Value="1.5"
                                    TargetName="Circle"/>
                <Setter Property="Stroke"
                                    Value="#FF003366"
                                    TargetName="Sign"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Simple Expander Template-->
    <ControlTemplate x:Key="SimpleExpanderTemp" TargetType="{x:Type Expander}">
        <DockPanel>
            <ToggleButton x:Name="ExpanderButton" 
                              DockPanel.Dock="Top"
                              Template="{StaticResource SimpleExpanderButtonTemp}"
                              Content="{TemplateBinding Header}"
                              IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                              OverridesDefaultStyle="True"
                              Padding="1.5,0">
            </ToggleButton>
            <ContentPresenter x:Name="ExpanderContent"
                                  Grid.Row="1" 
                                  Visibility="Collapsed"
                                  DockPanel.Dock="Bottom"/>
        </DockPanel>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
                <Setter TargetName="ExpanderContent" Property="Visibility" Value="Visible"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
</ResourceDictionary>